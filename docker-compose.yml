version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: chatbot_saas_db
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: chatbot_saas_2024
      MONGO_INITDB_DATABASE: chatbot_saas
    volumes:
      - mongodb_data:/data/db
    networks:
      - chatbot_network

  # Redis for caching and sessions
  redis:
    image: redis:7.2-alpine
    container_name: chatbot_saas_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chatbot_network

  # Evolution API (WhatsApp Integration)
  evolution-api:
    image: atendai/evolution-api:v2.0.0
    container_name: evolution_api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SERVER_TYPE=http
      - SERVER_PORT=8080
      - CORS_ORIGIN=*
      - CORS_METHODS=POST,GET,PUT,DELETE
      - CORS_CREDENTIALS=true
      - LOG_LEVEL=ERROR
      - LOG_COLOR=true
      - LOG_BAILEYS=error
      - DEL_INSTANCE=false
      - PROVIDER_ENABLED=true
      - PROVIDER_HOST=127.0.0.1
      - PROVIDER_PORT=5656
      - PROVIDER_PREFIX=evolution
      - DATABASE_ENABLED=true
      - DATABASE_CONNECTION_URI=mongodb://admin:chatbot_saas_2024@mongodb:27017/evolution?authSource=admin
      - DATABASE_CONNECTION_DB_PREFIX_NAME=evolution
      - REDIS_ENABLED=true
      - REDIS_URI=redis://redis:6379
      - REDIS_PREFIX_KEY=evolution
      - RABBITMQ_ENABLED=false
      - WEBSOCKET_ENABLED=false
      - SQS_ENABLED=false
      - TYPEBOT_ENABLED=false
      - CHATWOOT_ENABLED=false
      - OPENAI_ENABLED=false
      - DIFY_ENABLED=false
      - AUTHENTICATION_TYPE=jwt
      - AUTHENTICATION_JWT_EXPIRIN_IN=0
      - AUTHENTICATION_JWT_SECRET=chatbot_saas_jwt_secret_2024
      - AUTHENTICATION_API_KEY_ENABLED=true
      - AUTHENTICATION_API_KEY=evo-chatbot-saas-2024
      - LANGUAGE=pt-BR
    volumes:
      - evolution_instances:/evolution/instances
      - evolution_store:/evolution/store
    depends_on:
      - mongodb
      - redis
    networks:
      - chatbot_network

  # Flowise AI
  flowise:
    image: flowiseai/flowise:latest
    container_name: flowise_ai
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - PORT=3000
      - CORS_ORIGINS=*
      - IFRAME_ORIGINS=*
      - FLOWISE_USERNAME=admin
      - FLOWISE_PASSWORD=chatbot_saas_2024
      - DATABASE_PATH=/root/.flowise
      - APIKEY_PATH=/root/.flowise
      - LOG_LEVEL=info
      - DEBUG=false
      - LOG_PATH=/root/.flowise/logs
      - BLOB_STORAGE_PATH=/root/.flowise/storage
    volumes:
      - flowise_data:/root/.flowise
    networks:
      - chatbot_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chatbot_saas_backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://admin:chatbot_saas_2024@mongodb:27017/chatbot_saas?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=chatbot_saas_backend_jwt_2024
      - EVOLUTION_API_URL=http://evolution-api:8080
      - EVOLUTION_API_KEY=evo-chatbot-saas-2024
      - FLOWISE_API_URL=http://flowise:3000
      - FLOWISE_API_KEY=chatbot_saas_flowise_2024
      - WEBHOOK_URL=https://seu-dominio.com/api/webhook/whatsapp
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
      - evolution-api
      - flowise
    networks:
      - chatbot_network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chatbot_saas_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000/api
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=chatbot_saas_nextauth_2024
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - chatbot_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: chatbot_saas_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - evolution-api
      - flowise
    networks:
      - chatbot_network

volumes:
  mongodb_data:
  redis_data:
  evolution_instances:
  evolution_store:
  flowise_data:

networks:
  chatbot_network:
    driver: bridge